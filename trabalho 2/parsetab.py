
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND ARGUMENT BACKWARD BK CLEARSCREEN CS ELSE END EQUALS FO FORWARD GREATEQ GREATER HEADING HOME IDENTIFIER IF LEFT LOWEQ LOWER LT NUMBER OR PD PENDOWN PENUP PRINT PU RANDOM RIGHT RT SETXY THEN TO TYPEIN WC WHILE WIPECLEAN XCOR YCORprogram : expression other_expression\n    other_expression : expression other_expression\n        | empty\n    \n    expression : value_expr\n        | logo_expr\n        | if_stmt\n        | loop_stmt\n        | assign_expr\n        | params\n    empty :logo_expr : PENUP\n        | PU\n        | PENDOWN\n        | PD\n        | WIPECLEAN\n        | WC\n        | CLEARSCREEN\n        | CS\n        | HOME\n        | XCOR\n        | YCOR\n        | HEADING\n        | RANDOM\n        | TYPEIN\n    logo_expr : FORWARD value_expr\n        | FO value_expr \n        | BK value_expr \n        | BACKWARD value_expr\n        | RIGHT value_expr\n        | RT value_expr\n        | LEFT value_expr\n        | LT value_expr\n        | PRINT value_expr\n    logo_expr : SETXY value_expr value_exprvalue_expr : NUMBER\n        loop_stmt : WHILE bool_expr THEN expression END\n    bool_expr_operator : AND \n        | OR\n    \n        if_stmt : IF bool_expr THEN expression END\n    \n        if_stmt : IF bool_expr THEN expression ELSE expression END\n    \n    bool_expr : value_expr EQUALS value_expr\n        | value_expr GREATER value_expr\n        | value_expr LOWER value_expr\n        | value_expr GREATEQ value_expr\n        | value_expr LOWEQ value_expr\n    \n        bool_expr : bool_expr bool_expr_operator bool_expr\n    assign_expr : TO IDENTIFIER params expression ENDparams : ARGUMENT\n        | params ARGUMENT'
    
_lr_action_items = {'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,78,79,80,81,82,84,],[9,9,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,9,9,9,9,9,9,9,9,9,9,9,9,-48,9,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,9,-34,9,9,-37,-38,9,9,9,9,9,9,9,-49,-39,9,-36,-47,-40,]),'PENUP':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[10,10,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,10,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,10,10,10,-49,-39,10,-36,-47,-40,]),'PU':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[11,11,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,11,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,11,11,11,-49,-39,11,-36,-47,-40,]),'PENDOWN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[12,12,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,12,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,12,12,12,-49,-39,12,-36,-47,-40,]),'PD':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[13,13,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,13,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,13,13,13,-49,-39,13,-36,-47,-40,]),'WIPECLEAN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[14,14,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,14,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,14,14,14,-49,-39,14,-36,-47,-40,]),'WC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[15,15,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,15,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,15,15,15,-49,-39,15,-36,-47,-40,]),'CLEARSCREEN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[16,16,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,16,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,16,16,16,-49,-39,16,-36,-47,-40,]),'CS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[17,17,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,17,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,17,17,17,-49,-39,17,-36,-47,-40,]),'HOME':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[18,18,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,18,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,18,18,18,-49,-39,18,-36,-47,-40,]),'XCOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[19,19,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,19,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,19,19,19,-49,-39,19,-36,-47,-40,]),'YCOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[20,20,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,20,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,20,20,20,-49,-39,20,-36,-47,-40,]),'HEADING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[21,21,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,21,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,21,21,21,-49,-39,21,-36,-47,-40,]),'RANDOM':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[22,22,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,22,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,22,22,22,-49,-39,22,-36,-47,-40,]),'TYPEIN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[23,23,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,23,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,23,23,23,-49,-39,23,-36,-47,-40,]),'FORWARD':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[24,24,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,24,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,24,24,24,-49,-39,24,-36,-47,-40,]),'FO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[25,25,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,25,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,25,25,25,-49,-39,25,-36,-47,-40,]),'BK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[26,26,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,26,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,26,26,26,-49,-39,26,-36,-47,-40,]),'BACKWARD':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[27,27,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,27,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,27,27,27,-49,-39,27,-36,-47,-40,]),'RIGHT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[28,28,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,28,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,28,28,28,-49,-39,28,-36,-47,-40,]),'RT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[29,29,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,29,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,29,29,29,-49,-39,29,-36,-47,-40,]),'LEFT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[30,30,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,30,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,30,30,30,-49,-39,30,-36,-47,-40,]),'LT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[31,31,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,31,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,31,31,31,-49,-39,31,-36,-47,-40,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[32,32,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,32,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,32,32,32,-49,-39,32,-36,-47,-40,]),'SETXY':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[33,33,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,33,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,33,33,33,-49,-39,33,-36,-47,-40,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[34,34,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,34,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,34,34,34,-49,-39,34,-36,-47,-40,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[35,35,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,35,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,35,35,35,-49,-39,35,-36,-47,-40,]),'TO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,57,58,67,68,78,79,80,81,82,84,],[36,36,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,36,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,36,36,36,-49,-39,36,-36,-47,-40,]),'ARGUMENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,41,42,43,44,45,46,47,48,49,50,55,57,58,67,68,78,79,80,81,82,84,],[37,37,-4,-5,-6,-7,-8,41,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,37,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,37,-34,37,37,78,-48,-39,37,-36,-47,-40,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,38,39,40,41,42,43,44,45,46,47,48,49,50,56,57,79,81,82,84,],[0,-10,-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,-10,-1,-3,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-2,-34,-39,-36,-47,-40,]),'END':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,41,42,43,44,45,46,47,48,49,50,57,69,76,77,78,79,81,82,83,84,],[-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,79,81,82,-48,-39,-36,-47,84,-40,]),'ELSE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,37,41,42,43,44,45,46,47,48,49,50,57,69,79,81,82,84,],[-4,-5,-6,-7,-8,-9,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-48,-49,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,80,-39,-36,-47,-40,]),'EQUALS':([9,53,],[-35,62,]),'GREATER':([9,53,],[-35,63,]),'LOWER':([9,53,],[-35,64,]),'GREATEQ':([9,53,],[-35,65,]),'LOWEQ':([9,53,],[-35,66,]),'THEN':([9,52,54,70,71,72,73,74,75,],[-35,58,67,-46,-41,-42,-43,-44,-45,]),'AND':([9,52,54,70,71,72,73,74,75,],[-35,60,60,60,-41,-42,-43,-44,-45,]),'OR':([9,52,54,70,71,72,73,74,75,],[-35,61,61,61,-41,-42,-43,-44,-45,]),'IDENTIFIER':([36,],[55,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'expression':([0,2,38,58,67,68,80,],[2,38,38,69,76,77,83,]),'value_expr':([0,2,24,25,26,27,28,29,30,31,32,33,34,35,38,51,58,59,62,63,64,65,66,67,68,80,],[3,3,42,43,44,45,46,47,48,49,50,51,53,53,3,57,3,53,71,72,73,74,75,3,3,3,]),'logo_expr':([0,2,38,58,67,68,80,],[4,4,4,4,4,4,4,]),'if_stmt':([0,2,38,58,67,68,80,],[5,5,5,5,5,5,5,]),'loop_stmt':([0,2,38,58,67,68,80,],[6,6,6,6,6,6,6,]),'assign_expr':([0,2,38,58,67,68,80,],[7,7,7,7,7,7,7,]),'params':([0,2,38,55,58,67,68,80,],[8,8,8,68,8,8,8,8,]),'other_expression':([2,38,],[39,56,]),'empty':([2,38,],[40,40,]),'bool_expr':([34,35,59,],[52,54,70,]),'bool_expr_operator':([52,54,70,],[59,59,59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> expression other_expression','program',2,'p_program','logo_tree.py',13),
  ('other_expression -> expression other_expression','other_expression',2,'p_another_statement','logo_tree.py',23),
  ('other_expression -> empty','other_expression',1,'p_another_statement','logo_tree.py',24),
  ('expression -> value_expr','expression',1,'p_expr','logo_tree.py',36),
  ('expression -> logo_expr','expression',1,'p_expr','logo_tree.py',37),
  ('expression -> if_stmt','expression',1,'p_expr','logo_tree.py',38),
  ('expression -> loop_stmt','expression',1,'p_expr','logo_tree.py',39),
  ('expression -> assign_expr','expression',1,'p_expr','logo_tree.py',40),
  ('expression -> params','expression',1,'p_expr','logo_tree.py',41),
  ('empty -> <empty>','empty',0,'p_empty','logo_tree.py',49),
  ('logo_expr -> PENUP','logo_expr',1,'p_func','logo_tree.py',54),
  ('logo_expr -> PU','logo_expr',1,'p_func','logo_tree.py',55),
  ('logo_expr -> PENDOWN','logo_expr',1,'p_func','logo_tree.py',56),
  ('logo_expr -> PD','logo_expr',1,'p_func','logo_tree.py',57),
  ('logo_expr -> WIPECLEAN','logo_expr',1,'p_func','logo_tree.py',58),
  ('logo_expr -> WC','logo_expr',1,'p_func','logo_tree.py',59),
  ('logo_expr -> CLEARSCREEN','logo_expr',1,'p_func','logo_tree.py',60),
  ('logo_expr -> CS','logo_expr',1,'p_func','logo_tree.py',61),
  ('logo_expr -> HOME','logo_expr',1,'p_func','logo_tree.py',62),
  ('logo_expr -> XCOR','logo_expr',1,'p_func','logo_tree.py',63),
  ('logo_expr -> YCOR','logo_expr',1,'p_func','logo_tree.py',64),
  ('logo_expr -> HEADING','logo_expr',1,'p_func','logo_tree.py',65),
  ('logo_expr -> RANDOM','logo_expr',1,'p_func','logo_tree.py',66),
  ('logo_expr -> TYPEIN','logo_expr',1,'p_func','logo_tree.py',67),
  ('logo_expr -> FORWARD value_expr','logo_expr',2,'p_only_param_func','logo_tree.py',74),
  ('logo_expr -> FO value_expr','logo_expr',2,'p_only_param_func','logo_tree.py',75),
  ('logo_expr -> BK value_expr','logo_expr',2,'p_only_param_func','logo_tree.py',76),
  ('logo_expr -> BACKWARD value_expr','logo_expr',2,'p_only_param_func','logo_tree.py',77),
  ('logo_expr -> RIGHT value_expr','logo_expr',2,'p_only_param_func','logo_tree.py',78),
  ('logo_expr -> RT value_expr','logo_expr',2,'p_only_param_func','logo_tree.py',79),
  ('logo_expr -> LEFT value_expr','logo_expr',2,'p_only_param_func','logo_tree.py',80),
  ('logo_expr -> LT value_expr','logo_expr',2,'p_only_param_func','logo_tree.py',81),
  ('logo_expr -> PRINT value_expr','logo_expr',2,'p_only_param_func','logo_tree.py',82),
  ('logo_expr -> SETXY value_expr value_expr','logo_expr',3,'p_two_params_func','logo_tree.py',92),
  ('value_expr -> NUMBER','value_expr',1,'p_value_expr_num','logo_tree.py',102),
  ('loop_stmt -> WHILE bool_expr THEN expression END','loop_stmt',5,'p_loop','logo_tree.py',111),
  ('bool_expr_operator -> AND','bool_expr_operator',1,'p_and_or','logo_tree.py',123),
  ('bool_expr_operator -> OR','bool_expr_operator',1,'p_and_or','logo_tree.py',124),
  ('if_stmt -> IF bool_expr THEN expression END','if_stmt',5,'p_if','logo_tree.py',131),
  ('if_stmt -> IF bool_expr THEN expression ELSE expression END','if_stmt',7,'p_if_else','logo_tree.py',144),
  ('bool_expr -> value_expr EQUALS value_expr','bool_expr',3,'p_boolean_expr','logo_tree.py',159),
  ('bool_expr -> value_expr GREATER value_expr','bool_expr',3,'p_boolean_expr','logo_tree.py',160),
  ('bool_expr -> value_expr LOWER value_expr','bool_expr',3,'p_boolean_expr','logo_tree.py',161),
  ('bool_expr -> value_expr GREATEQ value_expr','bool_expr',3,'p_boolean_expr','logo_tree.py',162),
  ('bool_expr -> value_expr LOWEQ value_expr','bool_expr',3,'p_boolean_expr','logo_tree.py',163),
  ('bool_expr -> bool_expr bool_expr_operator bool_expr','bool_expr',3,'p_one_more_bool_expr','logo_tree.py',174),
  ('assign_expr -> TO IDENTIFIER params expression END','assign_expr',5,'p_assign','logo_tree.py',184),
  ('params -> ARGUMENT','params',1,'p_param','logo_tree.py',195),
  ('params -> params ARGUMENT','params',2,'p_param','logo_tree.py',196),
]
